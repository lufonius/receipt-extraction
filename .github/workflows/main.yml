# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
    - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        forceDeploy:
          description: 'enforce deployment?'
          required: false
          default: 'False'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  build-backend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Cache .gradle in home dir
        uses: actions/cache@v2.1.6
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.gradle
          key: ${{ github.ref }}-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle.kts') }}-1
          
      - name: Cache .gradle in project dir
        uses: actions/cache@v2.1.6
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ./backend/.gradle
          key: ${{ github.ref }}-${{ hashFiles('src/**') }}-1
          
      - name: List project dir content
        run: cd backend && ls -al
          
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
          java-version: '14'
          
      - name: give gradlew execute rights
        run: chmod +x ./backend/gradlew
        
      - name: set to current version of not set by user
        run: |
          VERSION=$(cd ./backend && ./gradlew --no-daemon properties -q | grep "^version:" | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using the following version for tagging and deployment: $VERSION"
        
      - name: Backend tests
        run: ./backend/gradlew test --project-dir ./backend
        
      - name: Backend build
        run: ./backend/gradlew bootJar --project-dir ./backend
        
      - name: Build docker image
        run: docker build -t aignn.azurecr.io/drezip/backend:${{ env.VERSION }} -f ./backend/app.Dockerfile ./backend
        
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          username: aignn
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          login-server: aignn.azurecr.io
          
      - name: Push docker image
        run: docker push aignn.azurecr.io/drezip/backend:${{ env.VERSION }}
        
      - name: create deployment values file for helm
        run: |
          touch deploy-backend-params.yaml
          echo "appVersion: $VERSION" >> deploy-backend-params.yaml
          echo "image: aignn.azurecr.io/drezip/backend:$VERSION" >> deploy-backend-params.yaml
          echo "gitCommit: ${{ github.sha }}" >> deploy-backend-params.yaml
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          # Artifact name
          name: artifact-drezip-backend-${{ github.run_id }}
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./infrastructure/drezip-backend
            ./infrastructure/drezip-db
            ./infrastructure/drezip-proxy
            ./deploy-backend-params.yaml
          retention-days: 14

  
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '12'
          
      - uses: actions/checkout@v2
      
      - name: Cache .gradle in home dir
        uses: actions/cache@v2.1.6
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.gradle
          key: ${{ github.ref }}-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle.kts') }}
      
      - name: give gradlew execute rights
        run: chmod +x ./backend/gradlew
        
      - name: set to current version of not set by user
        run: |
          VERSION=$(cd ./backend && ./gradlew --no-daemon properties -q | grep "^version:" | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using the following version for tagging and deployment: $VERSION"
          
      - name: npm clean install
        run: npm ci --prefix frontend
        
      - name: Frontend tests
        run: npm run unit-test --prefix frontend
      
      - name: Build frontend webcomponents
        run: npm run build:prod:www --prefix frontend
        
      - name: Build docker image
        run: docker build -t aignn.azurecr.io/drezip/frontend:${{ env.VERSION }} -f ./frontend/app.Dockerfile ./frontend
        
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          username: aignn
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          login-server: aignn.azurecr.io
          
      - name: Push docker image
        run: docker push aignn.azurecr.io/drezip/frontend:${{ env.VERSION }}
        
      - name: create deployment values file for helm
        run: |
          touch deploy-frontend-params.yaml
          echo "appVersion: $VERSION" >> deploy-frontend-params.yaml
          echo "image: aignn.azurecr.io/drezip/frontend:$VERSION" >> deploy-frontend-params.yaml
          echo "gitCommit: ${{ github.sha }}" >> deploy-frontend-params.yaml
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          # Artifact name
          name: artifact-drezip-frontend-${{ github.run_id }}
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./infrastructure/drezip-frontend
            ./deploy-frontend-params.yaml
          retention-days: 14
        
  deploy-test:
    runs-on: ubuntu-latest
    
    needs: [build-backend, build-frontend]
    
    steps:
    
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v1
        with:
          # Version of kubectl
          version: "v1.19.7"
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1.1
        with:
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Resource Group Name
          resource-group: aignn 
          # AKS Cluster Name
          cluster-name: aignn
      - name: Helm tool installer
        uses: Azure/setup-helm@v1
      
      - name: check helm version
        run: helm version
      
      - name: get kubernetes pods
        run: kubectl get pods -n test
        
      - name: Download frontend build artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: artifact-drezip-frontend-${{ github.run_id }}
      
      - name: Download backend build artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: artifact-drezip-backend-${{ github.run_id }}
          
      - name: helm upgrade or install drezip-db in test namespace
        run: helm upgrade --set environment=test --set gitCommit=${{ github.sha }} drezip-db ./infrastructure/drezip-db -n test --install --wait
        
      - name: helm upgrade or install drezip-backend in test namespace
        run: helm upgrade -f deploy-backend-params.yaml --set environment=test drezip-backend ./infrastructure/drezip-backend -n test --install --wait
        
      - name: helm upgrade or install drezip-frontend in test namespace
        run: helm upgrade -f deploy-frontend-params.yaml --set environment=test drezip-frontend ./infrastructure/drezip-frontend -n test --install --wait

      - name: helm upgrade or install drezip-proxy in test namespace
          run: helm upgrade --set environment=test,host=dev.drezip.ch drezip-proxy ./infrastructure/drezip-proxy -n test --install --wait
      
        
