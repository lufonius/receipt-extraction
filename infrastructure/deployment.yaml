apiVersion: v1
kind: ConfigMap
metadata:
  name: drezip-backend-config
  namespace: test
  labels:
    app: drezip
    type: backend
data:
  SPRING_PROFILES_ACTIVE: test
  application-test.properties: |
    spring.datasource.username=drezip_app
    spring.datasource.url=jdbc:mysql://drezip-db:3306/drezip

    spring.flyway.user=drezip_flyway
    spring.flyway.url=jdbc:mysql://drezip-db:3306/drezip

    spring.datasource.hikari.jdbc-url=jdbc:mysql://drezip-db:3306/drezip
    spring.datasource.hikari.username=drezip_app

    # do not load fixtures other than local environment
    spring.flyway.locations=classpath:db/migration

    # file storage
    app.azure-blob-storage-connection-string=DefaultEndpointsProtocol=https;AccountName=drezip;AccountKey=${app.azure-blob-storage-key};EndpointSuffix=core.windows.net
    app.azure-blob-storage-container-name=testenv

    # optical character recognition service
    app.ocr-url=https://thelab.cognitiveservices.azure.com/vision/v3.1/read/analyze?language=de
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drezip-backend
  namespace: test
  labels:
    app: drezip
    type: backend
spec:
  progressDeadlineSeconds: 60
  replicas: 1
  selector:
    matchLabels:
      app: drezip
      type: backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: drezip
        type: backend
    spec:
      containers:
      - image: aignn.azurecr.io/drezip/backend:0.0.1-SNAPSHOT
        imagePullPolicy: Always
        name: backend
        args: [
            'java', '-jar', 'drezip-0.0.1-SNAPSHOT.jar',
            '--spring.config.location=/drezip/config/,classpath:/application.properties',
            '--app.azure-blob-storage-key=$(app.azure-blob-storage-key)',
            '--app.ocr-key=$(app.ocr-key)',
            '--spring.datasource.hikari.password=$(spring.datasource.hikari.password)',
            '--spring.datasource.password=$(spring.datasource.password)',
            '--spring.flyway.password=$(spring.flyway.password)'
        ]
        ports:
          - containerPort: 8080
        envFrom:
          - secretRef:
              name: drezip-backend-secret
        env:
          - name: SPRING_PROFILES_ACTIVE
            valueFrom:
              configMapKeyRef:
                key: SPRING_PROFILES_ACTIVE
                name: drezip-backend-config
        volumeMounts:
          - mountPath: /drezip/config
            name: drezip-config-volume
      imagePullSecrets:
        - name: aignn-registry
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: drezip-config-volume
          configMap:
            name: drezip-backend-config
---
apiVersion: v1
kind: Service
metadata:
  name: drezip-backend
  namespace: test
  labels:
    app: drezip
    type: backend
spec:
  selector:
    app: drezip
    type: backend
  clusterIP: 10.0.175.145
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: default
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
  labels:
    kubernetes.io/cluster-service: "true"
provisioner: kubernetes.io/azure-disk
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: drezip-db-pvc
  labels:
    app: drezip
    type: db
  annotations:
    volume.beta.kubernetes.io/storage-class: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drezip-db
  namespace: test
  labels:
    app: drezip
    type: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drezip
      type: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drezip
        type: db
    spec:
      containers:
        - name: mysql
          image: library/mysql:8
          imagePullPolicy: Always
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: drezip-db-secret
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: init-schema
            - mountPath: /var/lib/mysql
              name: storage
      volumes:
        - name: init-schema
          secret:
            secretName: drezip-db-secret
        - name: storage
          persistentVolumeClaim:
            claimName: drezip-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: drezip-db
  namespace: test
  labels:
    app: drezip
    type: db
spec:
  selector:
    app: drezip
    type: db
  clusterIP: 10.0.94.253
  ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: drezip-frontend-nginx-config
  namespace: test
  labels:
    app: drezip
    type: frontend
data:
  default.conf: |
    server {
      listen       80;
      server_name  localhost;

      # redirect api calls to the backend
      location /api/ {
          proxy_pass http://drezip-backend/api/;
      }

      location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
      }

      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drezip-frontend
  namespace: test
  labels:
    app: drezip
    type: frontend
spec:
  progressDeadlineSeconds: 60
  replicas: 1
  selector:
    matchLabels:
      app: drezip
      type: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: drezip
        type: frontend
    spec:
      containers:
        - image: aignn.azurecr.io/drezip/frontend:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: frontend
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginx-conf
      imagePullSecrets:
        - name: aignn-registry
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: nginx-conf
          configMap:
            name: drezip-frontend-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: drezip-frontend
  namespace: test
  labels:
    app: drezip
    type: frontend
spec:
  selector:
    app: drezip
    type: frontend
  clusterIP: 10.0.174.154
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 31217
      port: 80
      protocol: TCP
      targetPort: 80
  sessionAffinity: None
  type: LoadBalancer





